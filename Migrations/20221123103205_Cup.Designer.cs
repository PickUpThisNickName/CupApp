// <auto-generated />
using System;
using CupApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CupApplication.Migrations
{
    [DbContext(typeof(AppDBContent))]
    [Migration("20221123103205_Cup")]
    partial class Cup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CupApplication.Data.Models.Beneficiaries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("GroupObjId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GroupObjId");

                    b.ToTable("DB_Beneficiaries");
                });

            modelBuilder.Entity("CupApplication.Data.Models.BenefitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Group")
                        .HasColumnType("longtext");

                    b.Property<float>("Koefficient")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("DB_BenefitType");
                });

            modelBuilder.Entity("CupApplication.Data.Models.Drinks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cup")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Source1")
                        .HasColumnType("longtext");

                    b.Property<string>("Source2")
                        .HasColumnType("longtext");

                    b.Property<string>("Source3")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DB_Drinks");
                });

            modelBuilder.Entity("CupApplication.Data.Models.Drinks_leftovers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("DB_Drinks_leftovers");
                });

            modelBuilder.Entity("CupApplication.Data.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<float>("PortionPrice")
                        .HasColumnType("float");

                    b.Property<float>("PortionVolume")
                        .HasColumnType("float");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.Property<float>("VolumeInStock")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("DB_Products");
                });

            modelBuilder.Entity("CupApplication.Data.Models.Sales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BeneficiariID")
                        .HasColumnType("int");

                    b.Property<int?>("Cup1_Amount")
                        .HasColumnType("int");

                    b.Property<int?>("Cup1_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Cup2_Amount")
                        .HasColumnType("int");

                    b.Property<int?>("Cup2_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Cup3_Amount")
                        .HasColumnType("int");

                    b.Property<int?>("Cup3_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Cup4_Amount")
                        .HasColumnType("int");

                    b.Property<int?>("Cup4_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Cup5_Amount")
                        .HasColumnType("int");

                    b.Property<int?>("Cup5_ID")
                        .HasColumnType("int");

                    b.Property<float?>("Paid")
                        .HasColumnType("float");

                    b.Property<int?>("Product1_Amount")
                        .HasColumnType("int");

                    b.Property<int?>("Product1_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Product2_Amount")
                        .HasColumnType("int");

                    b.Property<int?>("Product2_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.Property<int>("WorkingTimeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DB_Sales");
                });

            modelBuilder.Entity("CupApplication.Data.Models.WorkingSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CloseTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("OpenTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SessionGuid")
                        .HasColumnType("longtext");

                    b.Property<int>("WorkerID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DB_WorkingSession");
                });

            modelBuilder.Entity("CupApplication.Data.Models.Beneficiaries", b =>
                {
                    b.HasOne("CupApplication.Data.Models.BenefitType", "GroupObj")
                        .WithMany("Persons")
                        .HasForeignKey("GroupObjId");

                    b.Navigation("GroupObj");
                });

            modelBuilder.Entity("CupApplication.Data.Models.BenefitType", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
